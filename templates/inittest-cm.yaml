apiVersion: v1
kind: ConfigMap
metadata:
  name: inittestsh
  namespace: {{ .Release.Namespace }}
data:
  inittestsh-config: |-
    {{- $app_namespace_bak := .Values.global.app_namespace_bak }}
    {{- $chartName := .Chart.Name }}
    {{- $namespace := .Release.Namespace }}
    {{- $nodeReplicaCount := .Values.ReplicaCount | default 3 }}
    #!/bin/bash
    source /etc/profile
    host_num=`echo $HOSTNAME | awk -F- '{print $NF}'`
    mkdir -p /user/data/zookeeper
    echo $host_num > /user/data/zookeeper/myid;

    {{ range $nodecount, $e := until ($nodeReplicaCount|int) }}
      {{- if eq $nodecount 0 }}
    host_dns=( "{{ $chartName }}-ss-{{ $nodecount }}.ha-svc.{{ $namespace }}.svc.cluster.local"
      {{- else if eq $nodecount (sub $nodeReplicaCount 1)}}
        {{- " " }}"{{ $chartName }}-ss-{{ $nodecount }}.ha-svc.{{ $namespace }}.svc.cluster.local" )
      {{- else}}
        {{- " " }}"{{ $chartName }}-ss-{{ $nodecount }}.ha-svc.{{ $namespace }}.svc.cluster.local"
      {{- end }}
    {{- end }}

    {{ range $nodecount, $e := until ($nodeReplicaCount|int) }}
      host_dns_{{ $nodecount }}="{{ $chartName }}-ss-{{ $nodecount }}.ha-svc.{{ $namespace }}.svc.cluster.local"
    {{- end }}
    
    until [ {{ range $key, $val := until ($nodeReplicaCount|int) }}`ping -c 1 {{ $chartName }}-ss-{{ $key }}.ha-svc.{{ $namespace }}.svc.cluster.local | grep ', 0% packet loss,' | wc -l` = 1 {{ if eq $key (sub $nodeReplicaCount 1) }}{{- else }} -a {{ end }}  {{ end }}]
    do
      sleep 3
      echo "等待DNS服务"
    done

    for i in "${host_dns[@]}"
    do
      if [ "$i" = "{{ $chartName }}-ss-${host_num}.ha-svc.{{ $namespace }}.svc.cluster.local" ];then
        zkServer.sh start >> /user/zk.log
        continue
      fi
      ssh root@$i "source /etc/profile && zkServer.sh start"
    done

    if [ $host_num -eq 0 ];then
      echo "node0" 
      hadoop-daemons.sh start journalnode

      sh /user/nodeinfo/start.sh zkfc
      sh /user/nodeinfo/start.sh nnfc $host_dns_2

      hadoop-daemons.sh start journalnode

      hadoop-daemons.sh start namenode
      hadoop-daemons.sh start datanode
      #hadoop-daemon.sh start journalnode
      hadoop-daemons.sh start zkfc
  
      yarn-daemons.sh start resourcemanager
      yarn-daemons.sh start nodemanager

      hbase-daemon.sh start master
      hbase-daemon.sh start regionserver

      sh /user/nodeinfo/start.sh spark

      tail -f /etc/hosts
    
    elif [ $host_num -eq 1 ];then
      echo "node1"      
      hadoop-daemons.sh start journalnode
      hadoop-daemons.sh start datanode

      yarn-daemons.sh start resourcemanager
      yarn-daemons.sh start nodemanager

      hbase-daemon.sh start regionserver
      
      sh /user/nodeinfo/start.sh oozie
      
      tail -f /etc/hosts

    elif [ $host_num -eq 2 ];then
      echo 'node2'
      until [ -d /user/data/hadoop/hdfs/name ]
      do
        sleep 4
      done
      hadoop-daemons.sh start journalnode
      hadoop-daemons.sh start namenode
      hadoop-daemons.sh start datanode

      hadoop-daemons.sh start zkfc

      yarn-daemons.sh start nodemanager

      hbase-daemon.sh start master
      hbase-daemon.sh start regionserver


      mr-jobhistory-daemon.sh start historyserver

      sh /user/nodeinfo/start.sh flink

      historyserver.sh start
      start-history-server.sh
    
      tail -f /etc/hosts

    else
      echo 'other'
      
      other_host={{ $chartName }}-ss-$host_num.ha-svc.{{ $namespace }}.svc.cluster.local

      echo -e "\nserver.$host_num=$other_host:2888:3888" >> $ZOOKEEPER_HOME/conf/zoo.cfg

      zkServer.sh start

      echo -e "\n$other_host" >> $HADOOP_HOME/etc/hadoop/slaves

      hadoop-daemon.sh start journalnode

      hadoop-daemon.sh start datanode

      hdfs dfsadmin -setBalancerBandwidth 67108864

      start-balancer.sh -threshold 5

      yarn-daemon.sh start nodemanager

      hbase-daemon.sh start regionserver

      tail -f /etc/hosts

    fi
